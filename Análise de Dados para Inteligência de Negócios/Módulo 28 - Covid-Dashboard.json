{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"KJqp9AANOCtf"},"source":["<img src=\"https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png\" alt=\"ebac-logo\">\n","\n","---\n","\n","# **Módulo** | Análise de Dados: COVID-19 Dashboard\n","Caderno de **Exercícios**<br>\n","Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"d9jDtUbDOE1-"},"source":["# **Tópicos**\n","\n","<ol type=\"1\">\n","  <li>Introdução;</li>\n","  <li>Análise Exploratória de Dados;</li>\n","  <li>Visualização Interativa de Dados;</li>\n","  <li>Storytelling.</li>\n","</ol>\n"]},{"cell_type":"markdown","metadata":{"id":"SmoHgt-lwkpD"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"GABI6OW8OfQ2"},"source":["# **Exercícios**"]},{"cell_type":"markdown","metadata":{"id":"muD1vxozykSC"},"source":["Este *notebook* deve servir como um guia para **você continuar** a construção da sua própria análise exploratória de dados interativa. Fique a vontate para copiar os códigos da aula mas busque explorar os dados ao máximo. Por fim, publique seu *notebook* no [Kaggle](https://www.kaggle.com/) e seu *dashboard* [Google Data Studio](https://datastudio.google.com/)."]},{"cell_type":"markdown","metadata":{"id":"zMN1Q3jdwoJm"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"QRcqbpLpFK5o"},"source":["# **COVID Dashboard**"]},{"cell_type":"markdown","metadata":{"id":"6-CvdKwqFPiW"},"source":["## 1\\. Contexto"]},{"cell_type":"markdown","source":["Pandemia Coronavírus 2019:\n","\n","A disponibilidade de dados sobre a evolução da pandemia no tempo em uma determinada região geográfica é fundamental para o seu combate! Este projeto busca construir um dashboard de dados para exploração e visualização interativa de dados sobre o avanço de casos e da vacinação do Brasil. O processamento de dados está neste link e o dashboard, neste link.\n"],"metadata":{"id":"wS3AJBXvVULa"}},{"cell_type":"markdown","source":["TLDR"],"metadata":{"id":"w4r3b781VQ2B"}},{"cell_type":"markdown","metadata":{"id":"XRURE1uUFXGw"},"source":[" - **Dashboard**:\n","  - Google Data Studio ([Dashboard](https://lookerstudio.google.com/reporting/d9169946-5595-4eb3-8f42-06969ec776c3)).\n"," - **Processamento**:\n","  - Kaggle Notebook ([Código](https://www.kaggle.com/code/kaiooliveiradata/covid-dashboard-m28)).\n"," - **Fontes**:\n","  - Casos pela universidade John Hopkins ([link](https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports));\n","  - Vacinação pela universidade de Oxford ([link](https://covid.ourworldindata.org/data/owid-covid-data.csv)).\n","\n"]},{"cell_type":"markdown","source":["Os dados sobre **casos da COVID-19** são compilados pelo centro de ciência de sistemas e engenharia da universidade americana **John Hopkins** ([link](https://www.jhu.edu)). Os dados são atualizados diariamente deste janeiro de 2020 com uma granularidade temporal de dias e geográfica de regiões de países (estados, condados, etc.). O website do projeto pode ser acessado neste [link](https://systems.jhu.edu/research/public-health/ncov/) enquanto os dados, neste [link](https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports). Abaixo estão descritos os dados derivados do seu processamento.\n","\n"," - **date**: data de referência;\n"," - **state**: estado;\n"," - **country**: país;\n"," - **population**: população estimada;\n"," - **confirmed**: número acumulado de infectados;\n"," - **confirmed_1d**: número diário de infectados;\n"," - **confirmed_moving_avg_7d**: média móvel de 7 dias do número diário de infectados;\n"," - **confirmed_moving_avg_7d_rate_14d**: média móvel de 7 dias dividido pela média móvel de 7 dias de 14 dias atrás;\n"," - **deaths**: número acumulado de mortos;\n"," - **deaths_1d**: número diário de mortos;\n"," - **deaths_moving_avg_7d**: média móvel de 7 dias do número diário de mortos;\n"," - **deaths_moving_avg_7d**: média móvel de 7 dias dividido pela média móvel de 7 dias de 14 dias atrás;\n"," - **month**: mês de referência;\n"," - **year**: ano de referência.\n","\n","Os dados sobre **vacinação da COVID-19** são\n","compilados pelo projeto Nosso Mundo em Dados (*Our World in Data* ou OWID) da universidade britânica de **Oxford** ([link](https://www.ox.ac.uk)). Os dados são **atualizados diariamente** deste janeiro de 2020 com uma **granularidade temporal de dias e geográfica de países**. O website do projeto pode ser acessado neste [link](https://ourworldindata.org) enquanto os dados, neste [link](https://covid.ourworldindata.org/data/owid-covid-data.csv). Abaixo estão descritos os dados derivados do seu processamento.\n","\n"," - **date**: data de referência;\n"," - **country**: país;\n"," - **population**: população estimada;\n"," - **total**: número acumulado de doses administradas;\n"," - **one_shot**: número acumulado de pessoas com uma dose;\n"," - **one_shot_perc**: número acumulado relativo de pessoas com uma dose;\n"," - **two_shots**: número acumulado de pessoas com duas doses;\n"," - **two_shot_perc**: número acumulado relativo de pessoas com duas doses;\n"," - **three_shots**: número acumulado de pessoas com três doses;\n"," - **three_shot_perc**: número acumulado relativo de pessoas com três doses;\n"," - **month**: mês de referência;\n"," - **year**: ano de referência."],"metadata":{"id":"rkhp-fu-Vgmw"}},{"cell_type":"markdown","metadata":{"id":"QxukLHaqFnkU"},"source":["## 2\\. Pacotes e bibliotecas"]},{"cell_type":"code","metadata":{"id":"VXUEW0VrF7XW","executionInfo":{"status":"ok","timestamp":1750021420291,"user_tz":180,"elapsed":11,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"source":["import math\n","from typing import Iterator\n","from datetime import datetime, timedelta\n","import numpy as np\n","import pandas as pd"],"execution_count":29,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"irQxHW1zGkdZ"},"source":["## 3\\. Extração"]},{"cell_type":"code","source":["# Dados: casos e vacinação.\n","\n","cases = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/01-12-2021.csv', sep=',')\n","\n","vaccines = pd.read_csv('https://covid.ourworldindata.org/data/owid-covid-data.csv', sep=',', parse_dates=[3], infer_datetime_format=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c_cGZEQ-V_fL","executionInfo":{"status":"ok","timestamp":1750021429067,"user_tz":180,"elapsed":6715,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"16f8f865-e768-4641-a510-44c8e82972d9"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-30-3348870658>:5: FutureWarning: The argument 'infer_datetime_format' is deprecated and will be removed in a future version. A strict version of it is now the default, see https://pandas.pydata.org/pdeps/0004-consistent-to-datetime-parsing.html. You can safely remove this argument.\n","  vaccines = pd.read_csv('https://covid.ourworldindata.org/data/owid-covid-data.csv', sep=',', parse_dates=[3], infer_datetime_format=True)\n"]}]},{"cell_type":"code","metadata":{"id":"lxLj8e0GHAnr","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1750021429210,"user_tz":180,"elapsed":153,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"dffec687-0d95-40c6-cff9-2cc01209d6b9"},"source":["cases.head()"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   FIPS Admin2 Province_State Country_Region          Last_Update       Lat  \\\n","0   NaN    NaN            NaN    Afghanistan  2021-01-13 05:22:15  33.93911   \n","1   NaN    NaN            NaN        Albania  2021-01-13 05:22:15  41.15330   \n","2   NaN    NaN            NaN        Algeria  2021-01-13 05:22:15  28.03390   \n","3   NaN    NaN            NaN        Andorra  2021-01-13 05:22:15  42.50630   \n","4   NaN    NaN            NaN         Angola  2021-01-13 05:22:15 -11.20270   \n","\n","       Long_  Confirmed  Deaths  Recovered  Active Combined_Key  \\\n","0  67.709953      53584    2301      44608    6675  Afghanistan   \n","1  20.168300      64627    1252      38421   24954      Albania   \n","2   1.659600     102641    2816      69608   30217      Algeria   \n","3   1.521800       8682      86       7930     666      Andorra   \n","4  17.873900      18343     422      15512    2409       Angola   \n","\n","   Incident_Rate  Case_Fatality_Ratio  \n","0     137.647787             4.294192  \n","1    2245.708527             1.937271  \n","2     234.067409             2.743543  \n","3   11236.653077             0.990555  \n","4      55.811022             2.300605  "],"text/html":["\n","  <div id=\"df-309875f7-bbb7-4133-b358-c3925cdc23e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>Admin2</th>\n","      <th>Province_State</th>\n","      <th>Country_Region</th>\n","      <th>Last_Update</th>\n","      <th>Lat</th>\n","      <th>Long_</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Recovered</th>\n","      <th>Active</th>\n","      <th>Combined_Key</th>\n","      <th>Incident_Rate</th>\n","      <th>Case_Fatality_Ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Afghanistan</td>\n","      <td>2021-01-13 05:22:15</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","      <td>53584</td>\n","      <td>2301</td>\n","      <td>44608</td>\n","      <td>6675</td>\n","      <td>Afghanistan</td>\n","      <td>137.647787</td>\n","      <td>4.294192</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Albania</td>\n","      <td>2021-01-13 05:22:15</td>\n","      <td>41.15330</td>\n","      <td>20.168300</td>\n","      <td>64627</td>\n","      <td>1252</td>\n","      <td>38421</td>\n","      <td>24954</td>\n","      <td>Albania</td>\n","      <td>2245.708527</td>\n","      <td>1.937271</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Algeria</td>\n","      <td>2021-01-13 05:22:15</td>\n","      <td>28.03390</td>\n","      <td>1.659600</td>\n","      <td>102641</td>\n","      <td>2816</td>\n","      <td>69608</td>\n","      <td>30217</td>\n","      <td>Algeria</td>\n","      <td>234.067409</td>\n","      <td>2.743543</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Andorra</td>\n","      <td>2021-01-13 05:22:15</td>\n","      <td>42.50630</td>\n","      <td>1.521800</td>\n","      <td>8682</td>\n","      <td>86</td>\n","      <td>7930</td>\n","      <td>666</td>\n","      <td>Andorra</td>\n","      <td>11236.653077</td>\n","      <td>0.990555</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Angola</td>\n","      <td>2021-01-13 05:22:15</td>\n","      <td>-11.20270</td>\n","      <td>17.873900</td>\n","      <td>18343</td>\n","      <td>422</td>\n","      <td>15512</td>\n","      <td>2409</td>\n","      <td>Angola</td>\n","      <td>55.811022</td>\n","      <td>2.300605</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-309875f7-bbb7-4133-b358-c3925cdc23e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-309875f7-bbb7-4133-b358-c3925cdc23e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-309875f7-bbb7-4133-b358-c3925cdc23e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-340262ad-1edd-4b9e-a677-bf531d6a4d7d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-340262ad-1edd-4b9e-a677-bf531d6a4d7d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-340262ad-1edd-4b9e-a677-bf531d6a4d7d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cases","summary":"{\n  \"name\": \"cases\",\n  \"rows\": 4012,\n  \"fields\": [\n    {\n      \"column\": \"FIPS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18017.294539544288,\n        \"min\": 66.0,\n        \"max\": 99999.0,\n        \"num_unique_values\": 3265,\n        \"samples\": [\n          30021.0,\n          5039.0,\n          13025.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Admin2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1925,\n        \"samples\": [\n          \"Klickitat\",\n          \"Cooke\",\n          \"Monona\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Province_State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 597,\n        \"samples\": [\n          \"Xinjiang\",\n          \"Arizona\",\n          \"Quindio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country_Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 200,\n        \"samples\": [\n          \"Laos\",\n          \"Belarus\",\n          \"Cambodia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Update\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"2021-01-13 05:22:15\",\n          \"2020-12-21 13:27:30\",\n          \"2021-04-02 15:13:53\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.413389673795981,\n        \"min\": -71.9499,\n        \"max\": 71.7069,\n        \"num_unique_values\": 3922,\n        \"samples\": [\n          27.7610369,\n          -16.860271,\n          35.88494195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Long_\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 55.23972868573791,\n        \"min\": -178.1165,\n        \"max\": 178.065,\n        \"num_unique_values\": 3912,\n        \"samples\": [\n          -66.264131,\n          -95.00586446,\n          -103.4123733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Confirmed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114710,\n        \"min\": 0,\n        \"max\": 2800770,\n        \"num_unique_values\": 3143,\n        \"samples\": [\n          29332,\n          1886,\n          2121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Deaths\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3021,\n        \"min\": 0,\n        \"max\": 91626,\n        \"num_unique_values\": 814,\n        \"samples\": [\n          10,\n          466,\n          850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recovered\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86741,\n        \"min\": 0,\n        \"max\": 2218464,\n        \"num_unique_values\": 589,\n        \"samples\": [\n          13215,\n          64712,\n          3905\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65620,\n        \"min\": 0,\n        \"max\": 2674400,\n        \"num_unique_values\": 3014,\n        \"samples\": [\n          166,\n          3209,\n          928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Combined_Key\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4012,\n        \"samples\": [\n          \"McLean, Kentucky, US\",\n          \"W.P. Putrajaya, Malaysia\",\n          \"Carroll, Indiana, US\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Incident_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3421.1290742843867,\n        \"min\": 0.0,\n        \"max\": 27817.19188252764,\n        \"num_unique_values\": 3905,\n        \"samples\": [\n          5258.343322187875,\n          8440.81599903717,\n          6138.339543326646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Case_Fatality_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.179479074994877,\n        \"min\": 0.0,\n        \"max\": 1654.7169811320755,\n        \"num_unique_values\": 3511,\n        \"samples\": [\n          0.7761469299930839,\n          0.3937007874015748,\n          1.8433179723502304\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["vaccines.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"hJjPj_UoY7Q2","executionInfo":{"status":"ok","timestamp":1750021431482,"user_tz":180,"elapsed":130,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"6587cad0-413a-403b-f8eb-8f8f63657074"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  iso_code continent     location       date  total_cases  new_cases  \\\n","0      AFG      Asia  Afghanistan 2020-01-05          0.0        0.0   \n","1      AFG      Asia  Afghanistan 2020-01-06          0.0        0.0   \n","2      AFG      Asia  Afghanistan 2020-01-07          0.0        0.0   \n","3      AFG      Asia  Afghanistan 2020-01-08          0.0        0.0   \n","4      AFG      Asia  Afghanistan 2020-01-09          0.0        0.0   \n","\n","   new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n","0                 NaN           0.0         0.0                  NaN  ...   \n","1                 NaN           0.0         0.0                  NaN  ...   \n","2                 NaN           0.0         0.0                  NaN  ...   \n","3                 NaN           0.0         0.0                  NaN  ...   \n","4                 NaN           0.0         0.0                  NaN  ...   \n","\n","   male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n","0           NaN                  37.746                         0.5   \n","1           NaN                  37.746                         0.5   \n","2           NaN                  37.746                         0.5   \n","3           NaN                  37.746                         0.5   \n","4           NaN                  37.746                         0.5   \n","\n","   life_expectancy  human_development_index  population  \\\n","0            64.83                    0.511    41128772   \n","1            64.83                    0.511    41128772   \n","2            64.83                    0.511    41128772   \n","3            64.83                    0.511    41128772   \n","4            64.83                    0.511    41128772   \n","\n","   excess_mortality_cumulative_absolute  excess_mortality_cumulative  \\\n","0                                   NaN                          NaN   \n","1                                   NaN                          NaN   \n","2                                   NaN                          NaN   \n","3                                   NaN                          NaN   \n","4                                   NaN                          NaN   \n","\n","   excess_mortality  excess_mortality_cumulative_per_million  \n","0               NaN                                      NaN  \n","1               NaN                                      NaN  \n","2               NaN                                      NaN  \n","3               NaN                                      NaN  \n","4               NaN                                      NaN  \n","\n","[5 rows x 67 columns]"],"text/html":["\n","  <div id=\"df-1e6cd4d2-5a5d-4055-83db-11298cd3c1a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>iso_code</th>\n","      <th>continent</th>\n","      <th>location</th>\n","      <th>date</th>\n","      <th>total_cases</th>\n","      <th>new_cases</th>\n","      <th>new_cases_smoothed</th>\n","      <th>total_deaths</th>\n","      <th>new_deaths</th>\n","      <th>new_deaths_smoothed</th>\n","      <th>...</th>\n","      <th>male_smokers</th>\n","      <th>handwashing_facilities</th>\n","      <th>hospital_beds_per_thousand</th>\n","      <th>life_expectancy</th>\n","      <th>human_development_index</th>\n","      <th>population</th>\n","      <th>excess_mortality_cumulative_absolute</th>\n","      <th>excess_mortality_cumulative</th>\n","      <th>excess_mortality</th>\n","      <th>excess_mortality_cumulative_per_million</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","      <td>0.511</td>\n","      <td>41128772</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-06</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","      <td>0.511</td>\n","      <td>41128772</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-07</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","      <td>0.511</td>\n","      <td>41128772</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-08</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","      <td>0.511</td>\n","      <td>41128772</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-09</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","      <td>0.511</td>\n","      <td>41128772</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 67 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e6cd4d2-5a5d-4055-83db-11298cd3c1a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e6cd4d2-5a5d-4055-83db-11298cd3c1a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e6cd4d2-5a5d-4055-83db-11298cd3c1a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-70ce4c12-e2b2-4fe9-9226-f6a471f1dace\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70ce4c12-e2b2-4fe9-9226-f6a471f1dace')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-70ce4c12-e2b2-4fe9-9226-f6a471f1dace button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"vaccines"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["Definição de um intervalo de tempo para possibilitar a análise."],"metadata":{"id":"MvWXP33MWRM5"}},{"cell_type":"code","source":["def date_range(start_date: datetime, end_date: datetime) -> Iterator[datetime]:\n","  date_range_days: int = (end_date - start_date).days\n","  for lag in range(date_range_days):\n","    yield start_date + timedelta(lag)"],"metadata":{"id":"9NFt3ofOWHg8","executionInfo":{"status":"ok","timestamp":1750021433222,"user_tz":180,"elapsed":14,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["start_date = datetime(2021,  1,  1)\n","end_date   = datetime(2021, 12, 31)"],"metadata":{"id":"JdmxwikZWI1M","executionInfo":{"status":"ok","timestamp":1750021434022,"user_tz":180,"elapsed":35,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["Em seguida, precisamos filtrar e selecionar as informações referentes ao Brasil."],"metadata":{"id":"JpHyl2KFWZ8A"}},{"cell_type":"code","source":["cases = None\n","cases_is_empty = True\n","\n","for date in date_range(start_date=start_date, end_date=end_date):\n","\n","  date_str = date.strftime('%m-%d-%Y')\n","  data_source_url = f'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/{date_str}.csv'\n","\n","  case = pd.read_csv(data_source_url, sep=',')\n","\n","  case = case.drop(['FIPS', 'Admin2', 'Last_Update', 'Lat', 'Long_', 'Recovered', 'Active', 'Combined_Key', 'Case_Fatality_Ratio'], axis=1)\n","  case = case.query('Country_Region == \"Brazil\"').reset_index(drop=True)\n","  case['Date'] = pd.to_datetime(date.strftime('%Y-%m-%d'))\n","  if cases_is_empty:\n","    cases = case\n","    cases_is_empty = False\n","  else:\n","    cases = pd.concat([cases, case], axis= 0, ignore_index=True)"],"metadata":{"id":"7FdOMPvkWMCf","executionInfo":{"status":"ok","timestamp":1750021471679,"user_tz":180,"elapsed":36541,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["cases.query('Province_State == \"Sao Paulo\"').head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"VlwJL2PBWOUf","executionInfo":{"status":"ok","timestamp":1750020529271,"user_tz":180,"elapsed":64,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"dbb75e31-3544-4b41-8bd5-12cc37760234"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Province_State Country_Region  Confirmed  Deaths  Incident_Rate       Date\n","24       Sao Paulo         Brazil    1466191   46775    3192.990778 2021-01-01\n","51       Sao Paulo         Brazil    1467953   46808    3196.827966 2021-01-02\n","78       Sao Paulo         Brazil    1471422   46845    3204.382565 2021-01-03\n","105      Sao Paulo         Brazil    1473670   46888    3209.278136 2021-01-04\n","132      Sao Paulo         Brazil    1486551   47222    3237.329676 2021-01-05"],"text/html":["\n","  <div id=\"df-8eb63d5f-1f2f-4e01-9594-510e195016ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Province_State</th>\n","      <th>Country_Region</th>\n","      <th>Confirmed</th>\n","      <th>Deaths</th>\n","      <th>Incident_Rate</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>1466191</td>\n","      <td>46775</td>\n","      <td>3192.990778</td>\n","      <td>2021-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>1467953</td>\n","      <td>46808</td>\n","      <td>3196.827966</td>\n","      <td>2021-01-02</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>1471422</td>\n","      <td>46845</td>\n","      <td>3204.382565</td>\n","      <td>2021-01-03</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>1473670</td>\n","      <td>46888</td>\n","      <td>3209.278136</td>\n","      <td>2021-01-04</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>1486551</td>\n","      <td>47222</td>\n","      <td>3237.329676</td>\n","      <td>2021-01-05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8eb63d5f-1f2f-4e01-9594-510e195016ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8eb63d5f-1f2f-4e01-9594-510e195016ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8eb63d5f-1f2f-4e01-9594-510e195016ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-75b51d80-fe82-48e3-90be-b86a7f148f71\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75b51d80-fe82-48e3-90be-b86a7f148f71')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-75b51d80-fe82-48e3-90be-b86a7f148f71 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cases\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Province_State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Sao Paulo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country_Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Brazil\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Confirmed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8035,\n        \"min\": 1466191,\n        \"max\": 1486551,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1467953\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Deaths\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 180,\n        \"min\": 46775,\n        \"max\": 47222,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          46808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Incident_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.49935351474169,\n        \"min\": 3192.990778184452,\n        \"max\": 3237.3296755340034,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3196.827965666275\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-01 00:00:00\",\n        \"max\": \"2021-01-05 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2021-01-02 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["vaccines = vaccines.query('location == \"Brazil\"').reset_index(drop=True)\n","vaccines = vaccines[['location', 'population', 'total_vaccinations', 'people_vaccinated', 'people_fully_vaccinated', 'total_boosters', 'date']]"],"metadata":{"id":"YnR5uFsuZR7v","executionInfo":{"status":"ok","timestamp":1750021481818,"user_tz":180,"elapsed":38,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["cases.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gvaiog5ZWioo","executionInfo":{"status":"ok","timestamp":1750021484705,"user_tz":180,"elapsed":42,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"509d4222-86e2-40aa-91aa-80be1af16b2e"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(9828, 6)"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["vaccines.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YfT9J5EgZUid","executionInfo":{"status":"ok","timestamp":1750021485653,"user_tz":180,"elapsed":27,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"0718f4c7-aa6f-4d2f-af29-1efd13268ecc"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1674, 7)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["cases.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quFWP4wRWj-d","executionInfo":{"status":"ok","timestamp":1750021486261,"user_tz":180,"elapsed":26,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"090fa804-7001-470f-dd42-7d726c11f12e"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 9828 entries, 0 to 9827\n","Data columns (total 6 columns):\n"," #   Column          Non-Null Count  Dtype         \n","---  ------          --------------  -----         \n"," 0   Province_State  9828 non-null   object        \n"," 1   Country_Region  9828 non-null   object        \n"," 2   Confirmed       9828 non-null   int64         \n"," 3   Deaths          9828 non-null   int64         \n"," 4   Incident_Rate   9828 non-null   float64       \n"," 5   Date            9828 non-null   datetime64[ns]\n","dtypes: datetime64[ns](1), float64(1), int64(2), object(2)\n","memory usage: 460.8+ KB\n"]}]},{"cell_type":"code","source":["vaccines.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q0exgXaPZWoe","executionInfo":{"status":"ok","timestamp":1750021486928,"user_tz":180,"elapsed":26,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"6fc04799-f496-432d-f43e-d2a766c1438e"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1674 entries, 0 to 1673\n","Data columns (total 7 columns):\n"," #   Column                   Non-Null Count  Dtype         \n","---  ------                   --------------  -----         \n"," 0   location                 1674 non-null   object        \n"," 1   population               1674 non-null   int64         \n"," 2   total_vaccinations       695 non-null    float64       \n"," 3   people_vaccinated        691 non-null    float64       \n"," 4   people_fully_vaccinated  675 non-null    float64       \n"," 5   total_boosters           455 non-null    float64       \n"," 6   date                     1674 non-null   datetime64[ns]\n","dtypes: datetime64[ns](1), float64(4), int64(1), object(1)\n","memory usage: 91.7+ KB\n"]}]},{"cell_type":"markdown","metadata":{"id":"98hexQTyJS9I"},"source":["## 4\\. Transformação"]},{"cell_type":"markdown","source":["Agora o objetivo será garantir uma boa granulariade e qualidade da base de dados."],"metadata":{"id":"F2UhHSCeWpRT"}},{"cell_type":"code","source":["# Ajustando os nomes das colunas da base de casos.\n","\n","cases = cases.rename(\n","  columns={\n","    'Province_State': 'state',\n","    'Country_Region': 'country'\n","  }\n",")\n","\n","for col in cases.columns:\n","  cases = cases.rename(columns={col: col.lower()})\n","\n","# Tratando dados faltantes na base de vacinação.\n","\n","vaccines = vaccines.fillna(method='ffill')\n","\n","# Ajustando os nomes das colunas da base de vacinação.\n","vaccines = vaccines.rename(\n","  columns={\n","    'location': 'country',\n","    'total_vaccinations': 'total',\n","    'people_vaccinated': 'one_shot',\n","    'people_fully_vaccinated': 'two_shots',\n","    'total_boosters': 'three_shots',\n","  }\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1gRbODhiWvrx","executionInfo":{"status":"ok","timestamp":1750021488359,"user_tz":180,"elapsed":35,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"949f847f-3c9a-44cb-f87d-d68dd7bb4cfd"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-41-601608725>:15: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  vaccines = vaccines.fillna(method='ffill')\n"]}]},{"cell_type":"code","source":["# Ajustando os nomes dos estados.\n","\n","states_map = {\n","    'Amapa': 'Amapá',\n","    'Ceara': 'Ceará',\n","    'Espirito Santo': 'Espírito Santo',\n","    'Goias': 'Goiás',\n","    'Para': 'Pará',\n","    'Paraiba': 'Paraíba',\n","    'Parana': 'Paraná',\n","    'Piaui': 'Piauí',\n","    'Rondonia': 'Rondônia',\n","    'Sao Paulo': 'São Paulo'\n","}\n","\n","cases['state'] = cases['state'].apply(lambda state: states_map.get(state) if state in states_map.keys() else state)"],"metadata":{"id":"GGM--X1bW2JF","executionInfo":{"status":"ok","timestamp":1750021489803,"user_tz":180,"elapsed":70,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":["Computador novas colunas para enriquecer a base de dados."],"metadata":{"id":"JA3RnEKIW8uq"}},{"cell_type":"code","source":["# Chaves temporais:\n","\n","cases['month'] = cases['date'].apply(lambda date: date.strftime('%Y-%m'))\n","cases['year']  = cases['date'].apply(lambda date: date.strftime('%Y'))\n","\n","vaccines['month'] = vaccines['date'].apply(lambda date: date.strftime('%Y-%m'))\n","vaccines['year']  = vaccines['date'].apply(lambda date: date.strftime('%Y'))\n","\n","# População estimada do estado:\n","\n","cases['population'] = round(100000 * (cases['confirmed'] / cases['incident_rate']))\n","cases = cases.drop('incident_rate', axis=1)\n","\n","# Dados relativos:\n","\n","vaccines['one_shot_perc'] = round(vaccines['one_shot'] / vaccines['population'], 4)\n","vaccines['two_shots_perc'] = round(vaccines['two_shots'] / vaccines['population'], 4)\n","vaccines['three_shots_perc'] = round(vaccines['three_shots'] / vaccines['population'], 4)"],"metadata":{"id":"aULFYNakXBTO","executionInfo":{"status":"ok","timestamp":1750021491200,"user_tz":180,"elapsed":247,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":["Calcular a média movel e estabilidade de casos e mortes por estado:\n","\n","Esse é um complexo, para mais informações consulte o [link](https://g1.globo.com/bemestar/coronavirus/noticia/2020/07/27/entenda-como-e-calculada-a-media-movel-e-a-variacao-dos-casos-e-mortes-por-covid-19.ghtml)."],"metadata":{"id":"lNrbajMSXLMd"}},{"cell_type":"code","source":["cases_ = None\n","cases_is_empty = True\n","\n","def get_trend(rate: float) -> str:\n","\n","  if np.isnan(rate):\n","    return np.nan\n","\n","  if rate < 0.75:    # Se a divisão for menor que 0.75 (correção 0.85)\n","    status = 'downward'\n","  elif rate > 1.15:\n","    status = 'upward'\n","  else:\n","    status = 'stable'\n","\n","  return status\n","\n","\n","for state in cases['state'].drop_duplicates():\n","\n","  cases_per_state = cases.query(f'state == \"{state}\"').reset_index(drop=True)\n","  cases_per_state = cases_per_state.sort_values(by=['date'])\n","\n","  cases_per_state['confirmed_1d'] = cases_per_state['confirmed'].diff(periods=1)\n","  cases_per_state['confirmed_moving_avg_7d'] = np.ceil(cases_per_state['confirmed_1d'].rolling(window=7).mean())\n","  cases_per_state['confirmed_moving_avg_7d_rate_14d'] = cases_per_state['confirmed_moving_avg_7d']/cases_per_state['confirmed_moving_avg_7d'].shift(periods=14)\n","  cases_per_state['confirmed_trend'] = cases_per_state['confirmed_moving_avg_7d_rate_14d'].apply(get_trend)\n","\n","  cases_per_state['deaths_1d'] = cases_per_state['deaths'].diff(periods=1)\n","  cases_per_state['deaths_moving_avg_7d'] = np.ceil(cases_per_state['deaths_1d'].rolling(window=7).mean())\n","  cases_per_state['deaths_moving_avg_7d_rate_14d'] = cases_per_state['deaths_moving_avg_7d']/cases_per_state['deaths_moving_avg_7d'].shift(periods=14)\n","  cases_per_state['deaths_trend'] = cases_per_state['deaths_moving_avg_7d_rate_14d'].apply(get_trend)\n","\n","  if cases_is_empty:\n","    cases_ = cases_per_state\n","    cases_is_empty = False\n","  else:\n","    cases_ = pd.concat([cases_, cases_per_state],axis=0, ignore_index=True)\n","\n","cases = cases_\n","cases_ = None"],"metadata":{"id":"XfEMWu3vXiyG","executionInfo":{"status":"ok","timestamp":1750021501258,"user_tz":180,"elapsed":453,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":44,"outputs":[]},{"cell_type":"markdown","source":["Para evitar incosistências é necessário garantir que os tipos de dados estejam corretos."],"metadata":{"id":"THEOZbhtXmGt"}},{"cell_type":"code","source":["# Type casting das colunas.\n","\n","cases['population'] = cases['population'].astype('Int64')\n","cases['confirmed_1d'] = cases['confirmed_1d'].astype('Int64')\n","cases['confirmed_moving_avg_7d'] = cases['confirmed_moving_avg_7d'].astype('Int64')\n","cases['deaths_1d'] = cases['deaths_1d'].astype('Int64')\n","cases['deaths_moving_avg_7d'] = cases['deaths_moving_avg_7d'].astype('Int64')\n","\n","vaccines['population'] = vaccines['population'].astype('Int64')\n","vaccines['total'] = vaccines['total'].astype('Int64')\n","vaccines['one_shot'] = vaccines['one_shot'].astype('Int64')\n","vaccines['two_shots'] = vaccines['two_shots'].astype('Int64')\n","vaccines['three_shots'] = vaccines['three_shots'].astype('Int64')"],"metadata":{"id":"aXFKSQmeXsMq","executionInfo":{"status":"ok","timestamp":1750021509298,"user_tz":180,"elapsed":28,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["# Reorganizando as colunas.\n","\n","cases = cases[['date', 'country', 'state', 'population', 'confirmed', 'confirmed_1d', 'confirmed_moving_avg_7d', 'confirmed_moving_avg_7d_rate_14d', 'confirmed_trend', 'deaths', 'deaths_1d', 'deaths_moving_avg_7d', 'deaths_moving_avg_7d_rate_14d', 'deaths_trend', 'month', 'year']]\n","vaccines = vaccines[['date', 'country', 'population', 'total', 'one_shot', 'one_shot_perc', 'two_shots', 'two_shots_perc', 'three_shots', 'three_shots_perc', 'month', 'year']]"],"metadata":{"id":"LaMrb3nMXwOD","executionInfo":{"status":"ok","timestamp":1750021529399,"user_tz":180,"elapsed":24,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["cases.head(n=25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ONrsdZPIaWjH","executionInfo":{"status":"ok","timestamp":1750021620547,"user_tz":180,"elapsed":220,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"71f36d64-d2f7-4335-f301-714eb5c1b8e6"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date country state  population  confirmed  confirmed_1d  \\\n","0  2021-01-01  Brazil  Acre      881935      41689          <NA>   \n","1  2021-01-02  Brazil  Acre      881935      41941           252   \n","2  2021-01-03  Brazil  Acre      881935      42046           105   \n","3  2021-01-04  Brazil  Acre      881935      42117            71   \n","4  2021-01-05  Brazil  Acre      881935      42170            53   \n","5  2021-01-06  Brazil  Acre      881935      42378           208   \n","6  2021-01-07  Brazil  Acre      881935      42478           100   \n","7  2021-01-08  Brazil  Acre      881935      42814           336   \n","8  2021-01-09  Brazil  Acre      881935      42908            94   \n","9  2021-01-10  Brazil  Acre      881935      43127           219   \n","10 2021-01-11  Brazil  Acre      881935      43346           219   \n","11 2021-01-12  Brazil  Acre      881935      43432            86   \n","12 2021-01-13  Brazil  Acre      881935      43785           353   \n","13 2021-01-14  Brazil  Acre      881935      44068           283   \n","14 2021-01-15  Brazil  Acre      881935      44156            88   \n","15 2021-01-16  Brazil  Acre      881935      44621           465   \n","16 2021-01-17  Brazil  Acre      881935      44767           146   \n","17 2021-01-18  Brazil  Acre      881935      44775             8   \n","18 2021-01-19  Brazil  Acre      881935      45208           433   \n","19 2021-01-20  Brazil  Acre      881935      45429           221   \n","20 2021-01-21  Brazil  Acre      881935      45729           300   \n","21 2021-01-22  Brazil  Acre      881935      45987           258   \n","22 2021-01-23  Brazil  Acre      881935      46239           252   \n","23 2021-01-24  Brazil  Acre      881935      46429           190   \n","24 2021-01-25  Brazil  Acre      881935      46539           110   \n","\n","    confirmed_moving_avg_7d  confirmed_moving_avg_7d_rate_14d confirmed_trend  \\\n","0                      <NA>                               NaN             NaN   \n","1                      <NA>                               NaN             NaN   \n","2                      <NA>                               NaN             NaN   \n","3                      <NA>                               NaN             NaN   \n","4                      <NA>                               NaN             NaN   \n","5                      <NA>                               NaN             NaN   \n","6                      <NA>                               NaN             NaN   \n","7                       161                               NaN             NaN   \n","8                       139                               NaN             NaN   \n","9                       155                               NaN             NaN   \n","10                      176                               NaN             NaN   \n","11                      181                               NaN             NaN   \n","12                      201                               NaN             NaN   \n","13                      228                               NaN             NaN   \n","14                      192                               NaN             NaN   \n","15                      245                               NaN             NaN   \n","16                      235                               NaN             NaN   \n","17                      205                               NaN             NaN   \n","18                      254                               NaN             NaN   \n","19                      235                               NaN             NaN   \n","20                      238                               NaN             NaN   \n","21                      262                          1.627329          upward   \n","22                      232                          1.669065          upward   \n","23                      238                          1.535484          upward   \n","24                      252                          1.431818          upward   \n","\n","    deaths  deaths_1d  deaths_moving_avg_7d  deaths_moving_avg_7d_rate_14d  \\\n","0      796       <NA>                  <NA>                            NaN   \n","1      798          2                  <NA>                            NaN   \n","2      802          4                  <NA>                            NaN   \n","3      806          4                  <NA>                            NaN   \n","4      808          2                  <NA>                            NaN   \n","5      814          6                  <NA>                            NaN   \n","6      821          7                  <NA>                            NaN   \n","7      823          2                     4                            NaN   \n","8      823          0                     4                            NaN   \n","9      825          2                     4                            NaN   \n","10     826          1                     3                            NaN   \n","11     827          1                     3                            NaN   \n","12     829          2                     3                            NaN   \n","13     832          3                     2                            NaN   \n","14     835          3                     2                            NaN   \n","15     835          0                     2                            NaN   \n","16     836          1                     2                            NaN   \n","17     837          1                     2                            NaN   \n","18     839          2                     2                            NaN   \n","19     840          1                     2                            NaN   \n","20     844          4                     2                            NaN   \n","21     846          2                     2                            0.5   \n","22     848          2                     2                            0.5   \n","23     850          2                     2                            0.5   \n","24     854          4                     3                            1.0   \n","\n","   deaths_trend    month  year  \n","0           NaN  2021-01  2021  \n","1           NaN  2021-01  2021  \n","2           NaN  2021-01  2021  \n","3           NaN  2021-01  2021  \n","4           NaN  2021-01  2021  \n","5           NaN  2021-01  2021  \n","6           NaN  2021-01  2021  \n","7           NaN  2021-01  2021  \n","8           NaN  2021-01  2021  \n","9           NaN  2021-01  2021  \n","10          NaN  2021-01  2021  \n","11          NaN  2021-01  2021  \n","12          NaN  2021-01  2021  \n","13          NaN  2021-01  2021  \n","14          NaN  2021-01  2021  \n","15          NaN  2021-01  2021  \n","16          NaN  2021-01  2021  \n","17          NaN  2021-01  2021  \n","18          NaN  2021-01  2021  \n","19          NaN  2021-01  2021  \n","20          NaN  2021-01  2021  \n","21     downward  2021-01  2021  \n","22     downward  2021-01  2021  \n","23     downward  2021-01  2021  \n","24       stable  2021-01  2021  "],"text/html":["\n","  <div id=\"df-c672719e-157a-480d-89b0-d542d122361e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>country</th>\n","      <th>state</th>\n","      <th>population</th>\n","      <th>confirmed</th>\n","      <th>confirmed_1d</th>\n","      <th>confirmed_moving_avg_7d</th>\n","      <th>confirmed_moving_avg_7d_rate_14d</th>\n","      <th>confirmed_trend</th>\n","      <th>deaths</th>\n","      <th>deaths_1d</th>\n","      <th>deaths_moving_avg_7d</th>\n","      <th>deaths_moving_avg_7d_rate_14d</th>\n","      <th>deaths_trend</th>\n","      <th>month</th>\n","      <th>year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021-01-01</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>41689</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>796</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2021-01-02</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>41941</td>\n","      <td>252</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>798</td>\n","      <td>2</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021-01-03</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42046</td>\n","      <td>105</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>802</td>\n","      <td>4</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-01-04</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42117</td>\n","      <td>71</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>806</td>\n","      <td>4</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021-01-05</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42170</td>\n","      <td>53</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>808</td>\n","      <td>2</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2021-01-06</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42378</td>\n","      <td>208</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>814</td>\n","      <td>6</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2021-01-07</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42478</td>\n","      <td>100</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>821</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2021-01-08</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42814</td>\n","      <td>336</td>\n","      <td>161</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>823</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2021-01-09</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>42908</td>\n","      <td>94</td>\n","      <td>139</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>823</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2021-01-10</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>43127</td>\n","      <td>219</td>\n","      <td>155</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>825</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2021-01-11</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>43346</td>\n","      <td>219</td>\n","      <td>176</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>826</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2021-01-12</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>43432</td>\n","      <td>86</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>827</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2021-01-13</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>43785</td>\n","      <td>353</td>\n","      <td>201</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>829</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2021-01-14</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>44068</td>\n","      <td>283</td>\n","      <td>228</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>832</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2021-01-15</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>44156</td>\n","      <td>88</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>835</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2021-01-16</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>44621</td>\n","      <td>465</td>\n","      <td>245</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>835</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2021-01-17</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>44767</td>\n","      <td>146</td>\n","      <td>235</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>836</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2021-01-18</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>44775</td>\n","      <td>8</td>\n","      <td>205</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>837</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2021-01-19</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>45208</td>\n","      <td>433</td>\n","      <td>254</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>839</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2021-01-20</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>45429</td>\n","      <td>221</td>\n","      <td>235</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>840</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2021-01-21</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>45729</td>\n","      <td>300</td>\n","      <td>238</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>844</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2021-01-22</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>45987</td>\n","      <td>258</td>\n","      <td>262</td>\n","      <td>1.627329</td>\n","      <td>upward</td>\n","      <td>846</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.5</td>\n","      <td>downward</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2021-01-23</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>46239</td>\n","      <td>252</td>\n","      <td>232</td>\n","      <td>1.669065</td>\n","      <td>upward</td>\n","      <td>848</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.5</td>\n","      <td>downward</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2021-01-24</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>46429</td>\n","      <td>190</td>\n","      <td>238</td>\n","      <td>1.535484</td>\n","      <td>upward</td>\n","      <td>850</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.5</td>\n","      <td>downward</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2021-01-25</td>\n","      <td>Brazil</td>\n","      <td>Acre</td>\n","      <td>881935</td>\n","      <td>46539</td>\n","      <td>110</td>\n","      <td>252</td>\n","      <td>1.431818</td>\n","      <td>upward</td>\n","      <td>854</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>stable</td>\n","      <td>2021-01</td>\n","      <td>2021</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c672719e-157a-480d-89b0-d542d122361e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c672719e-157a-480d-89b0-d542d122361e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c672719e-157a-480d-89b0-d542d122361e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2b547e34-5f0d-4b50-90f6-a6c91a3bb44b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b547e34-5f0d-4b50-90f6-a6c91a3bb44b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2b547e34-5f0d-4b50-90f6-a6c91a3bb44b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cases","repr_error":"Out of range float values are not JSON compliant: inf"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["vaccines.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"4ngjWZc2as1G","executionInfo":{"status":"ok","timestamp":1750021629100,"user_tz":180,"elapsed":145,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}},"outputId":"645e4cba-45ce-489f-ea7f-dca729fb7a55"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date country  population      total   one_shot  one_shot_perc  \\\n","1669 2024-07-31  Brazil   215313504  486436436  189643431         0.8808   \n","1670 2024-08-01  Brazil   215313504  486436436  189643431         0.8808   \n","1671 2024-08-02  Brazil   215313504  486436436  189643431         0.8808   \n","1672 2024-08-03  Brazil   215313504  486436436  189643431         0.8808   \n","1673 2024-08-04  Brazil   215313504  486436436  189643431         0.8808   \n","\n","      two_shots  two_shots_perc  three_shots  three_shots_perc    month  year  \n","1669  176164186          0.8182    126388587             0.587  2024-07  2024  \n","1670  176164186          0.8182    126388587             0.587  2024-08  2024  \n","1671  176164186          0.8182    126388587             0.587  2024-08  2024  \n","1672  176164186          0.8182    126388587             0.587  2024-08  2024  \n","1673  176164186          0.8182    126388587             0.587  2024-08  2024  "],"text/html":["\n","  <div id=\"df-fa533f8e-2b83-4440-b635-0a1fc3076895\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>country</th>\n","      <th>population</th>\n","      <th>total</th>\n","      <th>one_shot</th>\n","      <th>one_shot_perc</th>\n","      <th>two_shots</th>\n","      <th>two_shots_perc</th>\n","      <th>three_shots</th>\n","      <th>three_shots_perc</th>\n","      <th>month</th>\n","      <th>year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1669</th>\n","      <td>2024-07-31</td>\n","      <td>Brazil</td>\n","      <td>215313504</td>\n","      <td>486436436</td>\n","      <td>189643431</td>\n","      <td>0.8808</td>\n","      <td>176164186</td>\n","      <td>0.8182</td>\n","      <td>126388587</td>\n","      <td>0.587</td>\n","      <td>2024-07</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>1670</th>\n","      <td>2024-08-01</td>\n","      <td>Brazil</td>\n","      <td>215313504</td>\n","      <td>486436436</td>\n","      <td>189643431</td>\n","      <td>0.8808</td>\n","      <td>176164186</td>\n","      <td>0.8182</td>\n","      <td>126388587</td>\n","      <td>0.587</td>\n","      <td>2024-08</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>1671</th>\n","      <td>2024-08-02</td>\n","      <td>Brazil</td>\n","      <td>215313504</td>\n","      <td>486436436</td>\n","      <td>189643431</td>\n","      <td>0.8808</td>\n","      <td>176164186</td>\n","      <td>0.8182</td>\n","      <td>126388587</td>\n","      <td>0.587</td>\n","      <td>2024-08</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>1672</th>\n","      <td>2024-08-03</td>\n","      <td>Brazil</td>\n","      <td>215313504</td>\n","      <td>486436436</td>\n","      <td>189643431</td>\n","      <td>0.8808</td>\n","      <td>176164186</td>\n","      <td>0.8182</td>\n","      <td>126388587</td>\n","      <td>0.587</td>\n","      <td>2024-08</td>\n","      <td>2024</td>\n","    </tr>\n","    <tr>\n","      <th>1673</th>\n","      <td>2024-08-04</td>\n","      <td>Brazil</td>\n","      <td>215313504</td>\n","      <td>486436436</td>\n","      <td>189643431</td>\n","      <td>0.8808</td>\n","      <td>176164186</td>\n","      <td>0.8182</td>\n","      <td>126388587</td>\n","      <td>0.587</td>\n","      <td>2024-08</td>\n","      <td>2024</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa533f8e-2b83-4440-b635-0a1fc3076895')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa533f8e-2b83-4440-b635-0a1fc3076895 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa533f8e-2b83-4440-b635-0a1fc3076895');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9e4ebd7d-2a46-432b-93c3-121db9a56186\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e4ebd7d-2a46-432b-93c3-121db9a56186')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9e4ebd7d-2a46-432b-93c3-121db9a56186 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","metadata":{"id":"KSgjP--1JS9R"},"source":["## 5\\. Carregamento"]},{"cell_type":"markdown","source":["Salvar os dados, fazer o download e carrega-los no Looker Studio."],"metadata":{"id":"u7tFump0YWsq"}},{"cell_type":"code","metadata":{"id":"Jlj3ACWCJS9R","executionInfo":{"status":"ok","timestamp":1750021641914,"user_tz":180,"elapsed":1127,"user":{"displayName":"Kaio Oliveira","userId":"10166308693421400761"}}},"source":["cases.to_csv('./covid-cases.csv', sep=',', index=False)\n","vaccines.to_csv('./covid-vaccines.csv', sep=',', index=False)"],"execution_count":49,"outputs":[]}]}